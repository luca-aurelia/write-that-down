[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG env: {"alfred_theme_background":"rgba(255,255,255,0.80)","SHELL":"/bin/zsh","TMPDIR":"/var/folders/7p/bc3sv2zn4bv3dl7xg836q3fw0000gn/T/","Apple_PubSub_Socket_Render":"/private/tmp/com.apple.launchd.YfwSR123TA/Render","alfred_preferences_localhash":"3963d9ae6db41f09dc278c5b6f0026930a5f6053","alfred_version_build":"768","USER":"ctbailey","alfred_version":"3.2.1","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.nlkvV1OiwW/Listeners","alfred_preferences":"/Users/ctbailey/dev/alfred/Alfred.alfredpreferences","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x0","alfred_theme_selection_background":"rgba(72,0,105,0.89)","alfred_theme_subtext":"0","PATH":"/Users/ctbailey/dev/personal/scripts/network-throttle:/Applications/SuperCollider.app/Contents/MacOS/:/Library/Frameworks/Python.framework/Versions/3.4/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/git/bin:/usr/bin:/bin:/usr/sbin:/sbin","alfred_workflow_cache":"/Users/ctbailey/Library/Caches/com.runningwithcrayons.Alfred-3/Workflow Data/io.noisemachines.write-that-down","alfred_debug":"1","PWD":"/Users/ctbailey/dev/alfred/Alfred.alfredpreferences/workflows/user.workflow.D3CB5F67-4A6F-4DC1-B15F-53336FD6E473","alfred_workflow_version":"0.1","XPC_FLAGS":"0x0","alfred_workflow_bundleid":"io.noisemachines.write-that-down","XPC_SERVICE_NAME":"0","HOME":"/Users/ctbailey","SHLVL":"2","LOGNAME":"ctbailey","LC_CTYPE":"en_US.UTF-8","alfred_workflow_uid":"user.workflow.D3CB5F67-4A6F-4DC1-B15F-53336FD6E473","alfred_workflow_name":"Write That Down","DISPLAY":"/private/tmp/com.apple.launchd.IB139NnB7W/org.macosforge.xquartz:0","SECURITYSESSIONID":"186a9","alfred_theme":"theme.bundled.default","alfred_workflow_data":"/Users/ctbailey/Library/Application Support/Alfred 3/Workflow Data/io.noisemachines.write-that-down","_":"/usr/local/bin/node"}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG store: {}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG initializing persistent queue
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG function queue was empty when scheduling
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"54beab981929c60de8ad32d0","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"56ddb5c46f50abd8f3a7cffb","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"54beab9af315936dffd602fc","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"54beab9fba9ead46cd118e22","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"54beaba0a248243303120712","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"550ba5b92dcadbddd2f3ec2d","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"554295c46887646ea458bc3a","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"55980998a17943117031d79a","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"559d657d5981f160919face0","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"55f0b367d9b6c78a57bd3d31","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"5621033a436c8d6c84fdf89c","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
[Tue Jan 10 2017 14:07:55 GMT+0900 (JST)] DEBUG {"alfredworkflow":{"arg":"586e1b230040bc2932f70bc1","variables":{"IO_NOISEMACHINES_ENVDB_q":"[\"function showCards() {\\n  const alfy = require('alfy')\\n  const alfred = require('./alfred')\\n  const { listId } = process.env\\n\\n  const gotCards = alfred.getCards(listId)\\n  const gotCreateCard = alfred.getCreateCard(alfy.input, listId)\\n\\n  return Promise.all([gotCards, gotCreateCard]).then(([cardItems, createCardItem]) => {\\n    cardItems.unshift(createCardItem)\\n    return cardItems\\n  })\\n}\",\"function handleAction({ action, data }) {\\n  const notifier = require('node-notifier')\\n  const open = require('open')\\n  const { postCard } = require('./trello')\\n\\n  const notify = (title, message, url) => notifier.notify({ title, message, open: url })\\n\\n  if (action === 'create') {\\n    postCard(data)\\n      .then(newCard => notify('It worked ⚡️', \\\"Your card's now on Trello.\\\", newCard.url))\\n      .catch(reason => notify('Oops 🌧', `Hit a problem: ${reason}`))\\n  } else if (action === 'show') {\\n    open(data.url)\\n  }\\n}\"]"}}}
